// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode = "prisma"
}

// model Tag {
//   id String @id @default(cuid())
//   name String @db.VarChar(255)
//   Posts Post[]

// }

// model Post {
//   id String @id @default(cuid())
//   title String @db.VarChar(255)
//   content String 
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   tagId String
//   tag Tag @relation(fields: [tagId], references: [id])

// }

model User {
  id        String     @id @default(cuid())
  username  String     @unique
  email     String     @unique
  imageUrl  String?
  Questions Question[]
  Rewards   Reward[]
  Answers   Answer[]
}

model Question {
  id        String   @id @default(cuid())
  content   String
  userId    String
  status    String  @default("draft")
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Answers   Answer[]
}

model Reward {
  id     String @id @default(cuid())
  points Int
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Answer {
  id         String   @id @default(cuid())
  content    String
  isCorrect  Boolean
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  userId     String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
